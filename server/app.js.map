{"version":3,"sources":["app.ts"],"names":[],"mappings":";;;;;;AAAA,4DAAqC;AACrC,8CAAwB;AACxB,oDAA8B;AAC9B,kDAA4B;AAC5B,+CAA8C;AAC9C,uCAAmC;AAEnC;IAGE;QACE,IAAI,CAAC,GAAG,GAAG,IAAA,iBAAO,GAAE,CAAC;QACrB,0CAA0C;QAC1C,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,qBAAU,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;QACzD,yBAAyB;QACzB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,qBAAU,CAAC,IAAI,EAAE,CAAC,CAAC;QAChC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAA,gBAAM,EAAC,KAAK,CAAC,CAAC,CAAC;QAC5B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,IAAA,cAAI,GAAE,CAAC,CAAC;QAErB,IAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAChD,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,kBAAM,CAAC,MAAM,EAAE;YAChC,IAAI,EAAE;gBACJ,MAAM,EAAE,GAAG;aACZ;SACF,CAAC,CAAC;QACL,IAAM,UAAU,GAAG,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;QAC3C,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QAE1B,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,YAAY,EAAE,UAAC,MAAW;YACrC,OAAO,CAAC,GAAG,CAAC,+BAA+B,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC;QAC1D,CAAC,CAAC,CAAC;QAEL,6BAA6B;QAC7B,IAAI,2BAAY,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC;IAED,sBAAI,oBAAG;aAAP;YACE,OAAO,IAAI,CAAC,GAAG,CAAC;QAClB,CAAC;;;OAAA;IACH,UAAC;AAAD,CAhCA,AAgCC,IAAA;AAhCY,kBAAG","file":"app.js","sourcesContent":["import bodyParser from 'body-parser';\r\nimport cors from 'cors';\r\nimport express from 'express';\r\nimport morgan from 'morgan';\r\nimport { RouteManager } from './routeManager';\r\nimport { Server } from 'socket.io';\r\n\r\nexport class App {\r\n  private readonly app: any;\r\n\r\n  constructor() {\r\n    this.app = express();\r\n    // parse application/x-www-form-urlencoded\r\n    this.app.use(bodyParser.urlencoded({ extended: false }));\r\n    // parse application/json\r\n    this.app.use(bodyParser.json());\r\n    this.app.use(morgan(\"dev\"));\r\n    this.app.use(cors());\r\n\r\n    const server = require('http').Server(this.app);\r\n    this.app['io'] = new Server(server, {\r\n        cors: {\r\n          origin: '*',\r\n        }\r\n      });\r\n    const socketPort = process.env.SOCKET_PORT;\r\n    server.listen(socketPort);\r\n\r\n    this.app.io.on('connection', (socket: any) => {\r\n        console.log('Client connected, socketID = ', socket.id);\r\n      });\r\n\r\n    // Define application routes.\r\n    new RouteManager(this.app);\r\n  }\r\n\r\n  get App() {\r\n    return this.app;\r\n  }\r\n}\r\n"]}
{"version":3,"sources":["routeManager.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,yCAA6B;AAC7B,+CAAmC;AACnC,+DAA8D;AAG9D,IAAM,UAAU,GAAG;IACjB,KAAK;IACL,MAAM;IACN,MAAM;IACN,MAAM;IACN,MAAM;IACN,QAAQ;IACR,OAAO;IACP,MAAM;IACN,MAAM;IACN,MAAM;CACP,CAAC;AAEF;IAIE,sBAAY,GAAQ;QAFZ,gBAAW,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,MAAM,CAAC,CAAC,CAAC,0BAA0B,CAAC,CAAC,CAAC,0BAA0B,CAAC;QAG9G,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;QACf,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;IACxB,CAAC;IAED;;OAEG;IACK,kCAAW,GAAnB,UAAoB,GAAQ;QAC1B,gBAAgB;QAChB,gEAAgE;QAChE,uGAAuG;QACvG,uGAAuG;QACvG,2BAA2B;QAE3B,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,SAAS,EAAE,IAAA,6CAAqB,EAAC,EAAE,MAAM,EAAE,IAAI,CAAC,WAAW,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;QACjG,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,eAAe,EAAE,IAAA,6CAAqB,EAAC,EAAE,MAAM,EAAE,IAAI,CAAC,WAAW,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;QACvG,SAAS,eAAe;QAExB,CAAC;QAED,iBAAiB;QACjB,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,SAAS,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;QAC5E,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,UAAC,GAAoB,EAAE,GAAqB;YAC5D,IAAI,UAAU,CAAC,MAAM,CAAC,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,EAArB,CAAqB,CAAC,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC9D,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,SAAS,GAAG,QAAQ,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;aACxE;iBAAM;gBACL,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,SAAS,GAAG,kBAAkB,CAAC,CAAC,CAAC;aACxE;QACH,CAAC,CAAC,CAAC;QAEH,yGAAyG;QACzG,uDAAuD;QACvD,6FAA6F;QAE7F,uCAAuC;QACvC,wDAAwD;QACxD,uGAAuG;QAEvG,cAAc;QACd,QAAQ;QACR,IAAI;IAEN,CAAC;IACH,mBAAC;AAAD,CAhDA,AAgDC,IAAA;AAhDY,oCAAY","file":"routeManager.js","sourcesContent":["import * as path from 'path';\r\nimport * as express from 'express';\r\nimport { createProxyMiddleware } from 'http-proxy-middleware';\r\nimport { proxy } from 'jquery';\r\n\r\nconst allowedExt = [\r\n  '.js',\r\n  '.ico',\r\n  '.css',\r\n  '.png',\r\n  '.jpg',\r\n  '.woff2',\r\n  '.woff',\r\n  '.ttf',\r\n  '.svg',\r\n  '.eot'\r\n];\r\n\r\nexport class RouteManager {\r\n  private readonly app: any;\r\n  private environment = process.env.NODE_ENV === 'demo' ? 'http://10.101.21.58:8089' : 'http://10.101.21.63:8087';\r\n\r\n  constructor(app: any) {\r\n    this.app = app;\r\n    this.mountRoutes(app);\r\n  }\r\n\r\n  /**\r\n   * Function to mount all the application routes under express application.\r\n   */\r\n  private mountRoutes(app: any): void {\r\n    // Other routes.\r\n    // this.app.use('/api/v1/user', UserController.Instance.Router);\r\n    // this.app.use('/api/v1/device-management', checkApiAuth, DeviceManagementController.Instance.Router);\r\n    // this.app.use('/api/v1/alerts-management', checkApiAuth, AlertsManagementController.Instance.Router);\r\n    // initialiseServices(app);\r\n\r\n    this.app.use('/nuxeo/', createProxyMiddleware({ target: this.environment, changeOrigin: true }));\r\n    this.app.use('/sockjs-node/', createProxyMiddleware({ target: this.environment, changeOrigin: true }));\r\n    function proxyMiddleware() {\r\n\r\n    }\r\n\r\n    // Default route.\r\n    this.app.use(express.static(path.resolve(__dirname + '/../../' + '/dist')));\r\n    this.app.get('*', (req: express.Request, res: express.Response) => {\r\n      if (allowedExt.filter(ext => req.url.includes(ext)).length > 0) {\r\n        res.sendFile(path.resolve(__dirname + '/../../' + '/dist/' + req.url));\r\n      } else {\r\n        res.sendFile(path.resolve(__dirname + '/../../' + '/dist/index.html'));\r\n      }\r\n    });\r\n\r\n    // function checkApiAuth(req: express.Request | any, res: express.Response, next: express.NextFunction) {\r\n    //   const token: string = req.headers['access-token'];\r\n    //   if (!token) return res.status(401).send({ auth: false, message: 'No token provided.' });\r\n\r\n    //   const secret = process.env.SECRET;\r\n    //   jwt.verify(token, secret, function (err, decoded) {\r\n    //     if (err) return res.status(402).send({ auth: false, message: 'Failed to authenticate token.' });\r\n\r\n    //     next();\r\n    //   });\r\n    // }\r\n\r\n  }\r\n}\r\n"]}